  
  
                                   [1X autshift [101X
  
  
        [1X Algorithms for Automotphisms of the Shift and related objects [101X
  
  
                                     0.1.0
  
  
                                16 February 2022
  
  
                                  Luke Elliott
  
  
  
  Luke Elliott
      Email:    [7Xmailto:Y[107X
      Homepage: [7Xhttps://le27.github.io/Luke-Elliott/[107X
      Address:  [33X[0;14YMathematical  Institute,  North  Haugh, St Andrews, Fife, KY16
                9SS, Scotland[133X
  
  
  
  -------------------------------------------------------
  [1XAbstract[101X
  [33X[0;0YThe  autshift  package  is  a GAP package containing methods for transducers
  that  can be used to represent isomorphisms between subshifts of finite type
  and  related  objects.  It implements the some of processes described in the
  papers                https://arxiv.org/abs/2004.08478v4by               and
  https://arxiv.org/abs/2112.13359   and   builds   on  the  existing  package
  https://github.com/gap-packages/aaa.[133X
  
  
  -------------------------------------------------------
  [1XAcknowledgements[101X
  [33X[0;0YThis  package  was  created by Luke Elliott under the funding of ESPRC grant
  EP/R032866/1  and  supervised  by  Collin  Bleak.  Special  thanks  to James
  Mitchell and Michael Torpey for their technical support.[133X
  
  
  -------------------------------------------------------
  
  
  [1XContents (autshift)[101X
  
  1 [33X[0;0YWalk homomorphisms and foldings[133X
    1.1 [33X[0;0YWalk homomorphisms[133X
      1.1-1 WalkHomomorphism
      1.1-2 ComposeWalkHomomorphisms
      1.1-3 \*
      1.1-4 IdentityWalkHomomorphism
      1.1-5 IsDegenerateWalkHomomorphism
      1.1-6 WalkHomomorphismImageAutomaton
      1.1-7 WalkHomomorphismVertexImageAutomaton
      1.1-8 PowerSetWalkHomomorphism
      1.1-9 ImageFinderWalkHomomorphism
      1.1-10 DualWalkHomomorphism
      1.1-11 ImageAsUnionOfCones
      1.1-12 ImagesAsUnionsOfCones
      1.1-13 TrimWalkHomomorphism
      1.1-14 MaxFutureConeDepth
      1.1-15 MaxHistoryConeDepth
      1.1-16 IsDeterministicWalkHomomorphism
      1.1-17 RemoveIncompleteResponse
      1.1-18 IsSynchronousWalkHomomorphism
      1.1-19 SynchronousRemoveIncompleteResponse
      1.1-20 IsAnnotatableWalkHomomorphism
      1.1-21 WalkHomomorphismAnnotation
      1.1-22 WalkHomomorphismAnnotation
      1.1-23 WalkHomomorphismAnnotation
      1.1-24 ReduceSynchronizingLength
      1.1-25 SynchronizingSequence
      1.1-26 SynchronizingSequenceConnections
      1.1-27 WalkHomomorphismInputString
    1.2 [33X[0;0YFoldings[133X
      1.2-1 MakeSynchronousWalkHomomorphism
      1.2-2 R2toPhiFold
      1.2-3 PhitoR2Fold
      1.2-4 LineDigraphWalkHomomorphism
      1.2-5 IsUDAFFolding
      1.2-6 IsOneSidedFolding
      1.2-7 IsTwoSidedFolding
      1.2-8 FoldingToLineFolding
    1.3 [33X[0;0YOther[133X
      1.3-1 WalksOfGivenLength
      1.3-2 OutEdgesAtVertex
      1.3-3 IsUDAFDigraph
      1.3-4 OneSidedDigraphMinimise
  2 [33X[0;0YTransducers and isomorphisms[133X
    2.1 [33X[0;0YUDAF[133X
      2.1-1 UDAFIsomorphism
      2.1-2 UDAFIsomorphism
      2.1-3 UDAFIsomorphism
      2.1-4 UDAFIsomorphism
      2.1-5 UDAFTransducer
      2.1-6 UDAFTransducer
      2.1-7 ComposeUDAFTransducers
      2.1-8 MinimalUDAFTransducer
      2.1-9 IsMinimalUDAFTransducer
      2.1-10 AreIsomorphicLabeledUDAFTransducers
      2.1-11 AreIsomorphicUDAFTransducers
      2.1-12 \*
      2.1-13 ComposeUDAFIsomorphisms
      2.1-14 \*
      2.1-15 \^
      2.1-16 UDAFNrStates
      2.1-17 \=
      2.1-18 IdentityUDAFTransducer
      2.1-19 DeterministicDomainCombineEquivalentStates
      2.1-20 \^
      2.1-21 \^
    2.2 [33X[0;0YTwo-sided shift[133X
      2.2-1 ShiftIsomorphism
      2.2-2 ShiftIsomorphism
      2.2-3 ShiftIsomorphism
      2.2-4 ComposeShiftIsomorphisms
      2.2-5 \*
      2.2-6 \^
      2.2-7 IdentityShiftIsomorphism
      2.2-8 \^
    2.3 [33X[0;0YOne-sided shift[133X
      2.3-1 OneSidedShiftIsomorphism
      2.3-2 OneSidedShiftIsomorphism
      2.3-3 ComposeOneSidedShiftIsomorphisms
      2.3-4 \*
      2.3-5 \^
      2.3-6 \^
      2.3-7 OneSidedTorsionDecomposition
      2.3-8 RandomOneSidedAut
    2.4 [33X[0;0YGNS transducers (from aaa).[133X
      2.4-1 BlockCodeTransducer
      2.4-2 DeBruijnTransducer
      2.4-3 ResizeZeroStringTransducer
      2.4-4 IsLipschitzTransducer
      2.4-5 TransducerCore
      2.4-6 IsCoreTransducer
  3 [33X[0;0YPictures and homomorphisms and dot strings[133X
    3.1 [33X[0;0YDot strings[133X
      3.1-1 DotWalkHomomorphism
      3.1-2 DotUDAFTransducer
      3.1-3 DotUDAFTransducerWithVertexLabels
    3.2 [33X[0;0YPictures[133X
      3.2-1 Draw
      3.2-2 Draw
      3.2-3 DrawSynchronous
      3.2-4 Draw
      3.2-5 Draw
      3.2-6 Draw
  
  
  [32X
